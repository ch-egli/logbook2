
server.port=8080

server.compression.enabled=true
server.http2.enabled=true

spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.database.driverClassName=org.postgresql.Driver

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql:trainingdb
spring.datasource.username=postgres
# The PostgreSQL image sets up trust authentication locally -> a password is not required when connecting from localhost (inside the same container).
spring.datasource.password=admin

# spring.profiles.active=localhttps

# expires in 60*60*1000 milli-seconds
security.jwt.token.expire-length=36000000
# jwt signing key (256 bits)
security.jwt.token.secret-key=t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G

logging.level.root=INFO
logging.level.org.springframework.security=INFO
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=INFO
logging.level.ch.egli=INFO
logging.level.ch.egli.training.util.LogbookRequestLoggingFilter=DEBUG
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

management.endpoints.web.exposure.include=beans